import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class SoManyRectangles
{
	class Node {
		int p;
		int begin;
		int v;

		public Node(int p, int begin, int v) {
			this.p = p;
			this.begin = begin;
			this.v = v;
		}
	}

	public int maxOverlap(int[] x1, int[] y1, int[] x2, int[] y2)
	{
		Node arr[] = new Node[2 * x2.length];
		Node arr2[] = new Node[2 * x2.length];

		for (int i = 0; i < x1.length; i++) {
			arr[2*i] = new Node(i, 1, x1[i]);
			arr[2*i + 1] = new Node(i, -1, x2[i]);
			arr2[2*i] = new Node(i, 1, y1[i]);
			arr2[2*i+1] = new Node(i, -1, y2[i]);
		}

		Arrays.sort(arr, (a,b) -> a.v == b.v ? a.begin - b.begin: a.v - b.v);
		Arrays.sort(arr2, (a,b) -> a.v == b.v ? a.begin - b.begin : a.v - b.v);
		
		boolean ps[] = new boolean[x1.length];
		int ans = 1;
		for (int i = 0; i < 2 * x1.length; i++) {
			if(arr[i].begin == 1) ps[arr[i].p] = true;
			else ps[arr[i].p] = false;
			ans = Math.max(ans, getMax(arr2, ps));
		}

		return ans;
	}

	private int getMax(Node[] arr, boolean[] ps) {
		int cnt = 0;
		int ans = 1;
		for (Node anArr : arr) {
			if (!ps[anArr.p]) continue;
			if (anArr.begin == 1) cnt++;
			else cnt--;
			ans = Math.max(ans, cnt);
		}

		return ans;
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int[] p0, int[] p1, int[] p2, int[] p3, boolean hasAnswer, int p4) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p0[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p3.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p3[i]);
		}
		System.out.print("}");
		System.out.println("]");
		SoManyRectangles obj;
		int answer;
		obj = new SoManyRectangles();
		long startTime = System.currentTimeMillis();
		answer = obj.maxOverlap(p0, p1, p2, p3);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p4);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p4;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int[] p0;
		int[] p1;
		int[] p2;
		int[] p3;
		int p4;
		
		// ----- test 0 -----
		p0 = new int[]{0,50};
		p1 = new int[]{0,50};
		p2 = new int[]{100,60};
		p3 = new int[]{100,60};
		p4 = 2;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new int[]{0,90};
		p1 = new int[]{0,90};
		p2 = new int[]{100,200};
		p3 = new int[]{100,200};
		p4 = 2;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new int[]{0,100};
		p1 = new int[]{0,100};
		p2 = new int[]{100,200};
		p3 = new int[]{100,200};
		p4 = 1;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new int[]{0,0,0,0,0};
		p1 = new int[]{0,0,0,0,0};
		p2 = new int[]{1,1,1,1,1};
		p3 = new int[]{1,1,1,1,1};
		p4 = 5;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new int[]{0};
		p1 = new int[]{0};
		p2 = new int[]{1};
		p3 = new int[]{1};
		p4 = 1;
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = new int[]{0, 1, 1};
		p1 = new int[]{0, 1, -1};
		p2 = new int[]{2, 3, 3};
		p3 = new int[]{2, 3, 1};
		p4 = 2;
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, p3, true, p4) && all_right;
		// ------------------

		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
