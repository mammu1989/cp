import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class OrAndSumEasy
{
	public String isPossible(long pairOr, long pairSum)
	{
		int c = 0;
		for (int i = 0; i < 64; i++) {
			if(c == 0) {
				if((pairOr&(1l<<i)) == 0) {
					if((pairSum&(1l<<i)) != 0) {
						return "Impossible";
					}
				} else {
					if((pairSum&(1l<<i)) == 0) {
						c = 1;
					}
				}
			} else {
				if((pairOr&(1l<<i)) == 0) {
					if((pairSum&(1l<<i)) == 0) {
						return "Impossible";
					} else {
						c = 0;
					}
				}
			}
		}

		if(c == 1) return "Impossible";

		return "Possible";
	}

	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, long p0, long p1, boolean hasAnswer, String p2) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1);
		System.out.println("]");
		OrAndSumEasy obj;
		String answer;
		obj = new OrAndSumEasy();
		long startTime = System.currentTimeMillis();
		answer = obj.isPossible(p0, p1);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p2 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p2);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		long p0;
		long p1;
		String p2;
		
		// ----- test 0 -----
		p0 = 7L;
		p1 = 11L;
		p2 = "Possible";
		all_right = KawigiEdit_RunTest(0, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 11L;
		p1 = 7L;
		p2 = "Impossible";
		all_right = KawigiEdit_RunTest(1, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 999799115789631487L;
		p1 = 999999999999999999L;
		p2 = "Possible";
		all_right = KawigiEdit_RunTest(2, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 1L;
		p1 = 100L;
		p2 = "Impossible";
		all_right = KawigiEdit_RunTest(3, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 0L;
		p1 = 0L;
		p2 = "Possible";
		all_right = KawigiEdit_RunTest(4, p0, p1, true, p2) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 4294950622L;
		p1 = 4336080674L;
		p2 = "Possible";
		all_right = KawigiEdit_RunTest(5, p0, p1, true, p2) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
