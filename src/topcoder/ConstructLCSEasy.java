import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class ConstructLCSEasy
{
	public String construct(int ab, int bc, int ca)
	{
		char a[] = new char[ca];
		for (int i = 0; i < ca; i++) a[i] = '1';
		char b[] = new char[bc];
		for (int i = 0; i < ab; i++) b[i] = '1';
		for (int i = ab; i < bc; i++) b[i] = '0';
		char c[] = new char[ca + bc - ab];
		for (int i = 0; i < bc; i++) c[i] = b[i];
		for (int i = bc; i < ca + bc - ab; i++) c[i] = '1';

		return new StringBuilder().append(a).append(" ").append(b).append(" ").append(c).toString();
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int p1, int p2, boolean hasAnswer, String p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + p1 + "," + p2);
		System.out.println("]");
		ConstructLCSEasy obj;
		String answer;
		obj = new ConstructLCSEasy();
		long startTime = System.currentTimeMillis();
		answer = obj.construct(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + "\"" + p3 + "\"");
		}
		System.out.println("Your answer:");
		System.out.println("\t" + "\"" + answer + "\"");
		if (hasAnswer) {
			res = answer.equals(p3);
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int p1;
		int p2;
		String p3;
		
		// ----- test 0 -----
		p0 = 2;
		p1 = 3;
		p2 = 4;
		p3 = "1111 101 1010101";
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 4;
		p1 = 4;
		p2 = 7;
		p3 = "10101010 1011 1010101";
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 6;
		p1 = 7;
		p2 = 8;
		p3 = "10101010 1111010 110101010";
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 7;
		p1 = 8;
		p2 = 8;
		p3 = "10101010 010101101 110101001011";
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = 15;
		p1 = 17;
		p2 = 19;
		p3 = "000100101101111011000 11110111010011101010 100100001010101001010101000011111";
		all_right = KawigiEdit_RunTest(4, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 5 -----
		p0 = 50;
		p1 = 50;
		p2 = 50;
		p3 = "11111111111111111111111111111111111111111111111111 11111111111111111111111111111111111111111111111111 11111111111111111111111111111111111111111111111111";
		all_right = KawigiEdit_RunTest(5, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
