import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class LiteratureOptimal
{
	public int minTurns(int n, int[] teja, int[] history)
	{
		int cards[] = new int[3 * n + 1];
		int cnt[] = new int[4];

		Arrays.fill(cards, 3);
		for (int i = 0; i < n; i++) {
			cards[teja[i]] = 0;
		}

		for (int i = 0; i < history.length; i++) {
			if(i % 3 > 0 && cards[history[i]] == 3) {
				cards[history[i]] = i % 3;
			}
		}

		for (int i = 1; i < cards.length; i++) {
			cnt[cards[i]]++;
		}

		if(n == cnt[1] || n == cnt[2]) return 0;
		int tc1 = (n - cnt[1]) * 3 - 1;
		int tc2 = (n - cnt[2]) * 3;

		if(history.length % 3 == 1) {
			tc1--;
			tc2--;
		} else if(history.length % 3 == 2) {
			tc1++;
			tc2 -= 2;
		}

		return Math.min(tc1, tc2);
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, int p0, int[] p1, int[] p2, boolean hasAnswer, int p3) {
		System.out.print("Test " + testNum + ": [" + p0 + "," + "{");
		for (int i = 0; p1.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p1[i]);
		}
		System.out.print("}" + "," + "{");
		for (int i = 0; p2.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print(p2[i]);
		}
		System.out.print("}");
		System.out.println("]");
		LiteratureOptimal obj;
		int answer;
		obj = new LiteratureOptimal();
		long startTime = System.currentTimeMillis();
		answer = obj.minTurns(p0, p1, p2);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p3);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p3;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		int p0;
		int[] p1;
		int[] p2;
		int p3;
		
		// ----- test 0 -----
		p0 = 2;
		p1 = new int[]{1,4};
		p2 = new int[]{};
		p3 = 5;
		all_right = KawigiEdit_RunTest(0, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = 2;
		p1 = new int[]{1,4};
		p2 = new int[]{6,6,2,3,5,1,5,6};
		p3 = 0;
		all_right = KawigiEdit_RunTest(1, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = 2;
		p1 = new int[]{3,6};
		p2 = new int[]{1,3,3,1,3,3,1,3,6,1};
		p3 = 4;
		all_right = KawigiEdit_RunTest(2, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = 7;
		p1 = new int[]{1,2,3,4,5,21,6};
		p2 = new int[]{7,1,13,9,5,18,11,17,20};
		p3 = 12;
		all_right = KawigiEdit_RunTest(3, p0, p1, p2, true, p3) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
