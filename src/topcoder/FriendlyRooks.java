import java.util.*;
import java.util.regex.*;
import java.text.*;
import java.math.*;


public class FriendlyRooks
{
	public int getMinFriendlyColoring(String[] board)
	{
		Queue<Integer> q = new LinkedList<>();
		int cnt = 0;
		int isVisited[][] = new int[board.length][board[0].length()]; 
		for (int i = 0; i < board.length; i++) {
			for (int j = 0; j < board[0].length(); j++) {
				if(board[i].charAt(j) == 'R' && isVisited[i][j] == 0) {
					q.offer(i);
					q.offer(j);
					cnt++;
					isVisited[i][j] = cnt;
					while (!q.isEmpty()) {
						int x = q.poll();
						int y = q.poll();
						for (int k = 0; k < board.length; k++) {
							if(board[k].charAt(y) == 'R' && isVisited[k][y] == 0) {
								q.offer(k);
								q.offer(y);
								isVisited[k][y] = cnt;
							}
						}
						for (int k = 0; k < board[x].length(); k++) {
							if(board[x].charAt(k) == 'R' && isVisited[x][k] == 0) {
								q.offer(x);
								q.offer(k);
								isVisited[x][k] = cnt;
							}
						}
					}
				}
			}
		}
		
		return cnt;
	}
	
	// BEGIN KAWIGIEDIT TESTING
	// Generated by KawigiEdit 2.1.4 (beta) modified by pivanof
	private static boolean KawigiEdit_RunTest(int testNum, String[] p0, boolean hasAnswer, int p1) {
		System.out.print("Test " + testNum + ": [" + "{");
		for (int i = 0; p0.length > i; ++i) {
			if (i > 0) {
				System.out.print(",");
			}
			System.out.print("\"" + p0[i] + "\"");
		}
		System.out.print("}");
		System.out.println("]");
		FriendlyRooks obj;
		int answer;
		obj = new FriendlyRooks();
		long startTime = System.currentTimeMillis();
		answer = obj.getMinFriendlyColoring(p0);
		long endTime = System.currentTimeMillis();
		boolean res;
		res = true;
		System.out.println("Time: " + (endTime - startTime) / 1000.0 + " seconds");
		if (hasAnswer) {
			System.out.println("Desired answer:");
			System.out.println("\t" + p1);
		}
		System.out.println("Your answer:");
		System.out.println("\t" + answer);
		if (hasAnswer) {
			res = answer == p1;
		}
		if (!res) {
			System.out.println("DOESN'T MATCH!!!!");
		} else if ((endTime - startTime) / 1000.0 >= 2) {
			System.out.println("FAIL the timeout");
			res = false;
		} else if (hasAnswer) {
			System.out.println("Match :-)");
		} else {
			System.out.println("OK, but is it right?");
		}
		System.out.println("");
		return res;
	}
	public static void main(String[] args) {
		boolean all_right;
		all_right = true;
		
		String[] p0;
		int p1;
		
		// ----- test 0 -----
		p0 = new String[]{".R.R","R.R.",".R.R"};
		p1 = 2;
		all_right = KawigiEdit_RunTest(0, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 1 -----
		p0 = new String[]{"RRRRRRRRRRRRRRR"};
		p1 = 1;
		all_right = KawigiEdit_RunTest(1, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 2 -----
		p0 = new String[]{"...............","...............","...............","...............","...............","..............."};
		p1 = 0;
		all_right = KawigiEdit_RunTest(2, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 3 -----
		p0 = new String[]{"....R..........",".R...........R.","....R..........",".R........R....","....R..........","....R.....R...."};
		p1 = 1;
		all_right = KawigiEdit_RunTest(3, p0, true, p1) && all_right;
		// ------------------
		
		// ----- test 4 -----
		p0 = new String[]{"R.........R",".R.......R.","..R.....R..","...R...R...","....R.R....",".....R.....","....R.R....","...R...R...","..R.....R..",".R.......R.","R.........R"};
		p1 = 6;
		all_right = KawigiEdit_RunTest(4, p0, true, p1) && all_right;
		// ------------------
		
		if (all_right) {
			System.out.println("You're a stud (at least on the example cases)!");
		} else {
			System.out.println("Some of the test cases had errors.");
		}
	}
	// END KAWIGIEDIT TESTING
}
//Powered by KawigiEdit 2.1.4 (beta) modified by pivanof!
